附录4：用于数据库查询性能对比的脚本
4.1、readings数据集性能测试脚本
ID	测试目的	MongoDB查询脚本
1	点查询：按时间查询	db.device_readings.explain("executionStats").find({time:{"$eq":ISODate("2016-11-15 07:00:00.000Z")}},{})
2	点查询：根据设备ID查询	db.device_readings.explain("executionStats").find({device_id:{"$eq":"demo000101"}},{}).count()
3	范围查询：单分区维度：查询某时间段的所有记录	db.device_readings.explain("executionStats").find({time:{"$gte":ISODate("2016-11-16 21:00:00.000Z"),"$lte":ISODate("2016-11-17 21:30:00.000Z")}},{})
4	范围查询.多分区维度：查询某时间段内某些设备的所有记录	db.device_readings.explain("executionStats").find({time:{"$gte":ISODate("2016-11-16 09:30:00.000Z"),"$lte":ISODate("2016-11-17 09:30:00.000Z")},
device_id:{"$in":["demo000001","demo000010","demo000100","demo001000"]}},{})
5	范围查询.多分区维度：查询某时间段内某些设备的特定记录	db.device_readings.explain("executionStats").find({time:{"$gte":ISODate("2016-11-15 20:00:00.000Z"),"$lte":ISODate("2016-11-16 22:30:00.000Z")},
device_id:{"$in":["demo000002","demo000020","demo000200","demo002000"]},battery_level:{"$lte":50},battery_status:"discharging"},{}) 
6	精度查询：查询各设备每小时的最大内存使用	db.device_readings.explain("executionStats").aggregate([{$group:{_id:{hour_new:{$hour:"$time"}},max_mem:{$max:"$mem_used"}}}])
7	聚合查询.单维度分区max：计算各设备电池最大电量	db.device_readings.explain("executionStats").aggregate([{$group:{_id:{device_id:"$device_id",hour_new:{$hour:"$time"}},max_temperature:{$max:"$battery_temperature"}}}])
8	聚合查询.多维度分区avg：计算各时间段内设备电池平均温度	db.device_readings.explain("executionStats").aggregate([{$group:{_id:{device_id:"$device_id",},
avg_temperature:{$avg:"$battery_temperature"}}}])
9	关联查询.多维过滤：查询某时间段内某些设备的特定信息	db.device_readings.explain("executionStats").aggregate([{$lookup:{from:"device_info",localField:"device_id", foreignField:"device_id",as:"device_result"}},
{$match:{time:{"$gte":ISODate("2016-11-15 09:00:00.000Z"),"$lte":ISODate("2016-11-15 12:00:00.000Z")},device_id:{"$eq":"demo000100"},
battery_status:"discharging"}}])
10	关联查询.聚合查询：查询某段时间某些设备每小时的平均电池温度，按平均温度和设备排序	db.device_readings.explain("executionStats").aggregate([{$lookup:{from:"device_info",localField:"device_id",foreignField:"device_id",as:"device_result"}},{$match:{device_id:{"$gte":"demo000100","$lte":"demo000150"},time:{"$gte":ISODate("2016-11-15 12:00:00.000Z"),"$lte":ISODate("2016-11-16 12:00:00.000Z")},cpu_avg_15min:{"$gte":5}}},
{$group:{_id:{hour_new:{$hour:"$time"},device_id:"$device_id"},avg_battery_temperature:{$avg:"$battery_temperature"},std_cpu_avg_15min:{$stdDevSamp:"$cpu_avg_15min"}}},{$sort:{"avg_battery_temperature":-1,"device_id":1}}])
11	经典查询：计算某时间段内高负载高电量设备的内存大小	db.device_readings.explain("executionStats").aggregate([{$match:{time:{"$lte":ISODate("2016-11-18 21:00:00.000Z")},battery_temperature:{"$gte":90},cpu_avg_1min:{"$gte":90}}},{$group:{_id:{time:"$time",device_id:"$device_id"},max_mem_free:{$max:"$mem_free"}}}]) 
12	经典查询：统计连接不同网络的设备的平均电量和最大、最小电量，并按平均电量降序排列	db.device_readings.explain("executionStats").aggregate([{$group:{_id:{ssid:"$ssid"},std_battery_level:{$stdDevSamp:"$battery_level"},avg_battery_level:{$avg:"$battery_level"}}},
{$sort:{"avg_battery_level":-1}}])
13	关联查询：计算某个时间段内某些设备的总负载，并将时段按总负载降序排列	db.device_readings.explain("executionStats").aggregate([{$match:{time:{"$gte":ISODate("2016-11-15 12:00:00.000Z"),"$lte":ISODate("2016-11-16 12:00:00.000Z")},      device_id:{"$in":["demo000001","demo000010","demo000100","demo001000"]}}},{$group:{_id:{hour_new:{$hour:"$time"}},sum_15min:{$sum:"$cpu_avg_15min"}}},{$sort:{"sum_15min":-1}}]) 
 
4.2、TAQ数据集性能测试脚本
ID	测试目的	MongoDB查询脚本
１	点查询：按日期和股票代码查询	db.taq_pt_col.explain("executionStats").find({symbol:{"$eq":"IBM"},date:{"$eq":ISODate("2007-08-07T00:00:00.000Z")}})
2	范围查询：查询某段时间内某些股票的所有信息	db.taq_pt_col.explain("executionStats").find({symbol:{"$in":["IBM","MSFT","GOOG","YHOO"]},date:{"$gte":ISODate("2007-08-07T00:00:00.000Z"),"$lte":ISODate("2007-08-08T00:00:00.000Z")},time:{"$gte":ISODate("0000-01-01T09:30:00.000Z"),"$lte":ISODate("0000-01-01T09:40:00.000Z")},bid:{"$gt":20}},{symbol:1,time:1,bid:1,ofr:1})
3	范围查询：top 1000+排序，按股票代码,日期过滤，按ofr降序排序	db.taq_pt_col.explain("executionStats").aggregate([{$match:{symbol:{"$in":["IBM","MSFT","GOOG","YHOO"]},date:{"$eq":ISODate("2007-08-07T00:00:00.000Z")},time:{"$gte":ISODate("0000-01-01T07:36:37.000Z")}}},{$sort:{ofr:-1}},{$limit:1000}])
４	
聚合查询.单分区维度：查询某天某个股票每分钟的最大ofr和最小的bid	db.taq_pt_col.explain("executionStats").aggregate([{$project:{symbol:1,date:1,bid:1,ofr:1,time:1,ofr_bid_dif:{$subtract:["$ofr","$bid"]}}},{$match:{date:{"$eq":ISODate("2007-08-10T00:00:00.000Z")},
symbol:{"$eq":"IBM"},ofr_bid_dif:{"gt":0}}},{$group:
{_id:{minute_new:{$minute:"$time"}},max_bid:{$max:"$bid"},min_ofr:{$min:"$ofr"}}}])  
５	聚合查询.多分区维度：查询某天某一些股票的bid标准差，按股票和分钟排序	db.taq_pt_col.explain("executionStats").aggregate([
{$match:{date:{"$eq":ISODate("2007-08-07T00:00:00.000Z")},time:{"$gte":ISODate("0000-01-01T09:00:00.000Z"),"$lte":ISODate("0000-01-01T21:00:00.000Z")},symbol:{"$in":["IBM","MSFT","GOOG","YHOO"]},bid:{"gt":20},ofr:{"gt":20}}},{$group:{_id:{symbol:"$symbol",minute_new:{$minute:"$time"}},std_bid:{$stdDevSamp:"$bid"},sum_bidsiz:{$sum:"$bidsiz"}}},{$sort:{symbol:1,minute_new:1}}])
６	经典查询：按股票代码，日期，时间，报价范围过滤，查询某些字段	db.taq_pt_col.explain("executionStats").find(
{symbol:{"$in":["IBM","MSFT","GOOG","YHOO"]},date:{"$eq":ISODate("2007-08-08T00:00:00.000Z")},
time:{"$gte":ISODate("0000-01-01T09:30:00.000Z"),"$lte":ISODate("0000-01-01T14:30:00.000Z")},bid:{"$gt":0},ofr:{"$gt":10}},{"symbol":1,"time":1,"bid":1,"ofr":1})
７	经典查询：按日期，时间范围，bid范围，股票过滤，查询每个股票每分钟的bid标准差和平均值	db.taq_pt_col.explain("executionStats").aggregate([{$match:{date:{"$eq":ISODate("2007-08-09T00:00:00.000Z")},time:{"$gte":ISODate("0000-01-01T10:30:00.000Z"),"$lte":ISODate("0000-01-01T16:00:00.000Z")},symbol:{"$in":["IBM","MSFT","GOOG","YHOO"]},bid:{"gt":1}}},{$group:{_id:{symbol:"$symbol",minute_new:{$minute:"$time"}},std_bid:{$stdDevSamp:"$bid"},avg_bid:{$avg:"$bid"}}}]) 
８	经典查询：根据股票代码和日期过滤，统计买入和卖出的和的均值	db.taq_pt_col.explain("executionStats").aggregate([{$project:{symbol:1,date:1,bid:1,ofr:1,time:1,ofr_bid_dif:{$subtract:["$ofr","$bid"]}}},{$match:{date:{"$eq":ISODate("2007-08-07T00:00:00.000Z")},
time:{"$gte":ISODate("0000-01-01T07:30:00.000Z"),"$lte":ISODate("0000-01-01T10:00:00.000Z")},symbol:{"$in":["GOOG","SBW","MSFT","USBE","YHOO"]}}},{$group:{_id:{symbol:"$symbol"},max_price:{$max:"$ofr_bid_dif"}}},{$sort:{max_price:-1}}])  
９	经典查询：按日期，时间，股票过滤，查询每天每分钟的均价	db.taq_pt_col.explain("executionStats").aggregate([{$match:{symbol:{"$eq":"IBM"},date:{"$gte":ISODate("2007-08-07T00:00:00.000Z"),"$lte":ISODate("2007-08-08T00:00:00.000Z")},time:{"$gte":ISODate("0000-01-01T09:30:00.000Z"),"$lte":ISODate("0000-01-01T16:00:00.000Z")}}},{$group:{_id:{date_new:{$dayOfMonth:"$time"},minute_new:{$minute:"$time"}},avg_bid:{$avg:"$bid"},avg_ofr:{$avg:"$ofr"}}}]) 
10	经典查询：按股票，时间，日期过滤，查询每只股票，每天的均价	db.taq_pt_col.explain("executionStats").aggregate([
{$project:{symbol:1,date:1,time:1,ofr_bid_sum:{$add:["$ofr","$bid"]}}},{$match:{date:{"$gte":ISODate("2007-08-08T00:00:00.000Z"),"$lte":ISODate("2007-08-09T00:00:00.000Z")},time:{"$gte":ISODate("0000-01-01T12:00:00.000Z"),"$lte":ISODate("0000-01-01T17:30:00.000Z")},symbol:{"$in":["IPB","SBW","IBM","USBE","YHOO"]}}},{$group:{_id:{symbol:"$symbol",date_new:{$dayOfMonth:"$time"}},avg_price:{$avg:"$ofr_bid_sum"}}}])  


